# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(959, 805)
        MainWindow.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../.designer/backup/icon_logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_url = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_url.sizePolicy().hasHeightForWidth())
        self.label_url.setSizePolicy(sizePolicy)
        self.label_url.setObjectName("label_url")
        self.verticalLayout.addWidget(self.label_url)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.comboBox_schema = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_schema.setObjectName("comboBox_schema")
        self.comboBox_schema.addItem("")
        self.comboBox_schema.addItem("")
        self.horizontalLayout.addWidget(self.comboBox_schema)
        self.lineEdit_url = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_url.setText("")
        self.lineEdit_url.setObjectName("lineEdit_url")
        self.horizontalLayout.addWidget(self.lineEdit_url)
        self.pushButton_crawl = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_crawl.setCheckable(False)
        self.pushButton_crawl.setFlat(False)
        self.pushButton_crawl.setObjectName("pushButton_crawl")
        self.horizontalLayout.addWidget(self.pushButton_crawl)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.splitter_2 = QtWidgets.QSplitter(self.centralwidget)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.splitter = QtWidgets.QSplitter(self.splitter_2)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.widget = QtWidgets.QWidget(self.splitter)
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_matched_pages = QtWidgets.QLabel(self.widget)
        self.label_matched_pages.setObjectName("label_matched_pages")
        self.verticalLayout_3.addWidget(self.label_matched_pages)
        self.listWidget_matched_pages = QtWidgets.QListWidget(self.widget)
        self.listWidget_matched_pages.setObjectName("listWidget_matched_pages")
        self.verticalLayout_3.addWidget(self.listWidget_matched_pages)
        self.widget1 = QtWidgets.QWidget(self.splitter)
        self.widget1.setObjectName("widget1")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget1)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_match_criteria = QtWidgets.QLabel(self.widget1)
        self.label_match_criteria.setObjectName("label_match_criteria")
        self.verticalLayout_5.addWidget(self.label_match_criteria)
        self.listWidget_search_criteria = QtWidgets.QListWidget(self.widget1)
        self.listWidget_search_criteria.setObjectName("listWidget_search_criteria")
        self.verticalLayout_5.addWidget(self.listWidget_search_criteria)
        self.pushButton_remove_criterion = QtWidgets.QPushButton(self.widget1)
        self.pushButton_remove_criterion.setObjectName("pushButton_remove_criterion")
        self.verticalLayout_5.addWidget(self.pushButton_remove_criterion)
        self.pushButton_clear_criteria = QtWidgets.QPushButton(self.widget1)
        self.pushButton_clear_criteria.setObjectName("pushButton_clear_criteria")
        self.verticalLayout_5.addWidget(self.pushButton_clear_criteria)
        self.label_criterion = QtWidgets.QLabel(self.widget1)
        self.label_criterion.setObjectName("label_criterion")
        self.verticalLayout_5.addWidget(self.label_criterion)
        self.lineEdit_criterion = QtWidgets.QLineEdit(self.widget1)
        self.lineEdit_criterion.setObjectName("lineEdit_criterion")
        self.verticalLayout_5.addWidget(self.lineEdit_criterion)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_include = QtWidgets.QPushButton(self.widget1)
        self.pushButton_include.setCheckable(False)
        self.pushButton_include.setFlat(False)
        self.pushButton_include.setObjectName("pushButton_include")
        self.horizontalLayout_3.addWidget(self.pushButton_include)
        self.pushButton_ignore = QtWidgets.QPushButton(self.widget1)
        self.pushButton_ignore.setObjectName("pushButton_ignore")
        self.horizontalLayout_3.addWidget(self.pushButton_ignore)
        self.pushButton_exclude = QtWidgets.QPushButton(self.widget1)
        self.pushButton_exclude.setObjectName("pushButton_exclude")
        self.horizontalLayout_3.addWidget(self.pushButton_exclude)
        self.verticalLayout_5.addLayout(self.horizontalLayout_3)
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.splitter_2)
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.verticalLayout_7.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_current_page = QtWidgets.QLabel(self.verticalLayoutWidget_4)
        self.label_current_page.setObjectName("label_current_page")
        self.verticalLayout_7.addWidget(self.label_current_page)
        self.tabWidget_page = QtWidgets.QTabWidget(self.verticalLayoutWidget_4)
        self.tabWidget_page.setMinimumSize(QtCore.QSize(0, 100))
        self.tabWidget_page.setAutoFillBackground(False)
        self.tabWidget_page.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget_page.setTabsClosable(False)
        self.tabWidget_page.setObjectName("tabWidget_page")
        self.tab_html = QtWidgets.QWidget()
        self.tab_html.setObjectName("tab_html")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_html)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.textBrowser_page_html = QtWidgets.QTextBrowser(self.tab_html)
        self.textBrowser_page_html.setObjectName("textBrowser_page_html")
        self.verticalLayout_9.addWidget(self.textBrowser_page_html)
        self.tabWidget_page.addTab(self.tab_html, "")
        self.tab_offline_render = QtWidgets.QWidget()
        self.tab_offline_render.setObjectName("tab_offline_render")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.tab_offline_render)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.textBrowser_page_render = QtWidgets.QTextBrowser(self.tab_offline_render)
        self.textBrowser_page_render.setObjectName("textBrowser_page_render")
        self.verticalLayout_10.addWidget(self.textBrowser_page_render)
        self.tabWidget_page.addTab(self.tab_offline_render, "")
        self.verticalLayout_7.addWidget(self.tabWidget_page)
        self.verticalLayout.addWidget(self.splitter_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 959, 24))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../../.designer/backup/feather/upload.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon1)
        self.actionOpen.setObjectName("actionOpen")
        self.actionExport = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("feather/download.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport.setIcon(icon2)
        self.actionExport.setObjectName("actionExport")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("feather/x-octagon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionQuit.setIcon(icon3)
        self.actionQuit.setObjectName("actionQuit")
        self.actionReset_Ctrl_R = QtWidgets.QAction(MainWindow)
        self.actionReset_Ctrl_R.setObjectName("actionReset_Ctrl_R")
        self.actionClear_Criteria = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("feather/x.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClear_Criteria.setIcon(icon4)
        self.actionClear_Criteria.setObjectName("actionClear_Criteria")
        self.actionRaw_HTML = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("feather/code.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRaw_HTML.setIcon(icon5)
        self.actionRaw_HTML.setObjectName("actionRaw_HTML")
        self.actionRendered_HTML = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("feather/monitor.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRendered_HTML.setIcon(icon6)
        self.actionRendered_HTML.setObjectName("actionRendered_HTML")
        self.actionOnline_Webpage_Ctrl_E = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("../../../../../Downloads/feather/cloud.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOnline_Webpage_Ctrl_E.setIcon(icon7)
        self.actionOnline_Webpage_Ctrl_E.setObjectName("actionOnline_Webpage_Ctrl_E")
        self.actionCrawl = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("feather/layers.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCrawl.setIcon(icon8)
        self.actionCrawl.setObjectName("actionCrawl")
        self.actionMatch = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("../../../.designer/backup/feather/tag.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMatch.setIcon(icon9)
        self.actionMatch.setObjectName("actionMatch")
        self.actionHighlight_Matches = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("feather/edit-3.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHighlight_Matches.setIcon(icon10)
        self.actionHighlight_Matches.setObjectName("actionHighlight_Matches")
        self.actionVisit_Help_Page = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("feather/info.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionVisit_Help_Page.setIcon(icon11)
        self.actionVisit_Help_Page.setObjectName("actionVisit_Help_Page")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("feather/users.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon12)
        self.actionAbout.setObjectName("actionAbout")
        self.actionOpen_Page_in_Web_Browser = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("feather/external-link.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen_Page_in_Web_Browser.setIcon(icon13)
        self.actionOpen_Page_in_Web_Browser.setObjectName("actionOpen_Page_in_Web_Browser")
        self.actionMatch_Text_Ctrl_Alt_F = QtWidgets.QAction(MainWindow)
        self.actionMatch_Text_Ctrl_Alt_F.setObjectName("actionMatch_Text_Ctrl_Alt_F")
        self.actionReset_Matched_Pages = QtWidgets.QAction(MainWindow)
        self.actionReset_Matched_Pages.setObjectName("actionReset_Matched_Pages")
        self.actionReset_Crawled_Pages = QtWidgets.QAction(MainWindow)
        self.actionReset_Crawled_Pages.setObjectName("actionReset_Crawled_Pages")
        self.actionImport = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("feather/upload.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionImport.setIcon(icon14)
        self.actionImport.setObjectName("actionImport")
        self.menuFile.addAction(self.actionImport)
        self.menuFile.addAction(self.actionExport)
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.actionCrawl)
        self.menuEdit.addAction(self.actionOpen_Page_in_Web_Browser)
        self.menuEdit.addAction(self.actionClear_Criteria)
        self.menuView.addAction(self.actionRaw_HTML)
        self.menuView.addAction(self.actionRendered_HTML)
        self.menuView.addAction(self.actionHighlight_Matches)
        self.menuAbout.addAction(self.actionVisit_Help_Page)
        self.menuAbout.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(MainWindow)
        self.comboBox_schema.setCurrentIndex(0)
        self.tabWidget_page.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Treasure Audit"))
        self.label_url.setText(_translate("MainWindow", "URL"))
        self.comboBox_schema.setCurrentText(_translate("MainWindow", "https://"))
        self.comboBox_schema.setItemText(0, _translate("MainWindow", "https://"))
        self.comboBox_schema.setItemText(1, _translate("MainWindow", "http://"))
        self.pushButton_crawl.setText(_translate("MainWindow", "Crawl"))
        self.label_matched_pages.setText(_translate("MainWindow", "Matched Pages"))
        self.label_match_criteria.setText(_translate("MainWindow", "Match Criteria"))
        self.pushButton_remove_criterion.setText(_translate("MainWindow", "Remove Selected Criterion"))
        self.pushButton_clear_criteria.setText(_translate("MainWindow", "Clear Criteria"))
        self.label_criterion.setText(_translate("MainWindow", "Add Criterion"))
        self.pushButton_include.setText(_translate("MainWindow", "Include"))
        self.pushButton_ignore.setText(_translate("MainWindow", "Ignore"))
        self.pushButton_exclude.setText(_translate("MainWindow", "Exclude"))
        self.label_current_page.setText(_translate("MainWindow", "Current Page"))
        self.tabWidget_page.setTabText(self.tabWidget_page.indexOf(self.tab_html), _translate("MainWindow", "HTML"))
        self.tabWidget_page.setTabText(self.tabWidget_page.indexOf(self.tab_offline_render), _translate("MainWindow", "Offline Render"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuAbout.setTitle(_translate("MainWindow", "Help"))
        self.actionOpen.setText(_translate("MainWindow", "Open... "))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionExport.setText(_translate("MainWindow", "Export Matched Pages"))
        self.actionExport.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As... "))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionReset_Ctrl_R.setText(_translate("MainWindow", "Reset (Ctrl+R)"))
        self.actionClear_Criteria.setText(_translate("MainWindow", "Clear Search Criteria"))
        self.actionClear_Criteria.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionRaw_HTML.setText(_translate("MainWindow", "HTML"))
        self.actionRaw_HTML.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionRendered_HTML.setText(_translate("MainWindow", "Offline Render"))
        self.actionRendered_HTML.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionOnline_Webpage_Ctrl_E.setText(_translate("MainWindow", "Online Webpage (Ctrl+E)"))
        self.actionOnline_Webpage_Ctrl_E.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionCrawl.setText(_translate("MainWindow", "Crawl "))
        self.actionCrawl.setShortcut(_translate("MainWindow", "Ctrl+Alt+C"))
        self.actionMatch.setText(_translate("MainWindow", "Match"))
        self.actionMatch.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionHighlight_Matches.setText(_translate("MainWindow", "Highlight Matches"))
        self.actionHighlight_Matches.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionVisit_Help_Page.setText(_translate("MainWindow", "Help"))
        self.actionVisit_Help_Page.setShortcut(_translate("MainWindow", "F1"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionOpen_Page_in_Web_Browser.setText(_translate("MainWindow", "Open Page in Web Browser"))
        self.actionOpen_Page_in_Web_Browser.setShortcut(_translate("MainWindow", "Ctrl+Alt+W"))
        self.actionMatch_Text_Ctrl_Alt_F.setText(_translate("MainWindow", "Match Text (Ctrl+Alt+F)"))
        self.actionReset_Matched_Pages.setText(_translate("MainWindow", "Reset Matched Pages"))
        self.actionReset_Matched_Pages.setShortcut(_translate("MainWindow", "Ctrl+Shift+R"))
        self.actionReset_Crawled_Pages.setText(_translate("MainWindow", "Reset Crawled Pages"))
        self.actionReset_Crawled_Pages.setShortcut(_translate("MainWindow", "Ctrl+Shift+R"))
        self.actionImport.setText(_translate("MainWindow", "Import List of Websites to Crawl"))
        self.actionImport.setShortcut(_translate("MainWindow", "Ctrl+I"))
